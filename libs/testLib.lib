library (testLib) {

  /* General Attributes */
  technology              		  (cmos);
  delay_model             		: table_lookup;
  in_place_swap_mode      		: match_footprint;
  
  /* Units Attributes */
  time_unit               		: "1ns";
  leakage_power_unit      		: "1pW";
  voltage_unit            		: "1V";
  current_unit            		: "1uA";
  pulling_resistance_unit 		: "1kohm";
  capacitive_load_unit    		  (1,pf);

  /* Operation Conditions */
  nom_process             		: 1.00;
  nom_temperature         		: 25.00;
  nom_voltage             		: 1.10;

  define(process_corner, operating_conditions, string);
  operating_conditions (typical) {
    process_corner	: "TypTyp";
    process       	: 1.00;
    voltage       	: 1.10;
    temperature   	: 25.00;
    tree_type     	: balanced_tree;
  }
  default_operating_conditions : typical;

  /* Threshold Definitions */
  slew_lower_threshold_pct_fall 	: 30.00 ;
  slew_lower_threshold_pct_rise 	: 30.00 ;
  slew_upper_threshold_pct_fall 	: 70.00 ;
  slew_upper_threshold_pct_rise 	: 70.00 ;
  slew_derate_from_library      	: 1.00 ;
  input_threshold_pct_fall      	: 50.00 ;
  input_threshold_pct_rise      	: 50.00 ;
  output_threshold_pct_fall     	: 50.00 ;
  output_threshold_pct_rise     	: 50.00 ;
  default_leakage_power_density 	: 0.00 ;
  default_cell_leakage_power    	: 0.00 ;

  /* Default Pin Attributes */
  default_inout_pin_cap       		: 1.0;
  default_input_pin_cap       		: 1.0;
  default_output_pin_cap      		: 0.0;
  default_fanout_load         		: 1.0;

  wire_load("5K_hvratio_1_1") {
    capacitance : 1.774000e-04;
    resistance : 3.571429e-03;
    area  : 8.159052e-02;
    slope : 5.000000;
    fanout_length( 1, 1.7460 );
    fanout_length( 2, 3.9394 );
    fanout_length( 3, 6.4626 );
    fanout_length( 4, 9.2201 );
    fanout_length( 5, 11.9123 );
    fanout_length( 6, 14.8358 );
    fanout_length( 7, 18.6155 );
    fanout_length( 8, 22.6727 );
    fanout_length( 9, 25.4842 );
    fanout_length( 11, 27.0320 );
  }
  
  default_wire_load : "5K_hvratio_1_1" ;

  power_lut_template (Power_data_X1) {
	variable_1 : input_transition_time;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.018750,0.037500,0.075000,0.150000,0.300000,0.600000")
	index_2 ("0.000400,0.000800,0.001600,0.003200,0.006400,0.012800,0.025600")
  }

  lu_table_template (Timing_data_X1) {
	variable_1 : input_net_transition;
	variable_2 : total_output_net_capacitance;
	index_1 ("0.007500,0.018750,0.037500,0.075000,0.150000,0.300000,0.600000")
	index_2 ("0.000400,0.000800,0.001600,0.003200,0.006400,0.012800,0.025600")
  }


cell (and) {

	area               	: 2.0;

	cell_leakage_power 	: 8230.017750;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 4709.287000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 11031.990000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 4896.084000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 12282.710000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.0005;
		max_transition		: 0.600000;
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.0005;
		max_transition		: 0.600000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.600000;
		function		: "(A1 & A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			cell_rise(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			fall_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			rise_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			cell_rise(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			fall_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			rise_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_data_X1) {
				values ("0.001668,0.001671,0.001674,0.001678,0.001680,0.001681,0.001681", \
				        "0.001669,0.001672,0.001676,0.001680,0.001682,0.001684,0.001684", \
				        "0.001722,0.001722,0.001724,0.001728,0.001730,0.001731,0.001732", \
				        "0.001878,0.001873,0.001870,0.001869,0.001870,0.001870,0.001870", \
				        "0.002249,0.002237,0.002226,0.002218,0.002213,0.002211,0.002210", \
				        "0.003120,0.003085,0.003057,0.003034,0.003018,0.003008,0.003002", \
				        "0.005017,0.004963,0.004916,0.004867,0.004823,0.004793,0.004777");
			}
			rise_power(Power_data_X1) {
				values ("0.001196,0.001201,0.001208,0.001219,0.001234,0.001255,0.001289", \
				        "0.001198,0.001201,0.001207,0.001217,0.001232,0.001253,0.001289", \
				        "0.001233,0.001234,0.001236,0.001243,0.001257,0.001277,0.001316", \
				        "0.001361,0.001358,0.001355,0.001356,0.001364,0.001382,0.001418", \
				        "0.001732,0.001724,0.001710,0.001702,0.001700,0.001712,0.001740", \
				        "0.002629,0.002608,0.002586,0.002563,0.002542,0.002537,0.002560", \
				        "0.004567,0.004516,0.004495,0.004461,0.004412,0.004376,0.004369");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_data_X1) {
				values ("0.002175,0.002177,0.002180,0.002184,0.002187,0.002190,0.002192", \
				        "0.002177,0.002179,0.002182,0.002187,0.002190,0.002193,0.002195", \
				        "0.002227,0.002226,0.002228,0.002231,0.002235,0.002238,0.002241", \
				        "0.002382,0.002375,0.002371,0.002370,0.002371,0.002372,0.002375", \
				        "0.002742,0.002728,0.002714,0.002705,0.002700,0.002699,0.002699", \
				        "0.003546,0.003517,0.003489,0.003467,0.003450,0.003440,0.003436", \
				        "0.005260,0.005215,0.005158,0.005118,0.005077,0.005048,0.005033");
			}
			rise_power(Power_data_X1) {
				values ("0.001196,0.001201,0.001209,0.001220,0.001234,0.001254,0.001295", \
				        "0.001185,0.001189,0.001196,0.001207,0.001222,0.001244,0.001277", \
				        "0.001186,0.001188,0.001193,0.001203,0.001218,0.001239,0.001276", \
				        "0.001239,0.001238,0.001239,0.001246,0.001258,0.001278,0.001315", \
				        "0.001476,0.001470,0.001465,0.001464,0.001470,0.001488,0.001520", \
				        "0.002181,0.002164,0.002146,0.002132,0.002125,0.002131,0.002161", \
				        "0.003787,0.003766,0.003744,0.003737,0.003703,0.003686,0.003699");
			}
		}
	}

}

cell (inv) {

	area               	: 1.0;

	cell_leakage_power 	: 2843.729500;

	leakage_power () {
		when      	: "!A";
		value      	: 1995.972000;
	}
	leakage_power () {
		when      	: "A";
		value      	: 3691.487000;
	}

	pin (A) {

		direction		: input;
		capacitance		: 0.0005;
		max_transition		: 0.600000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.600000;
		function		: "!A";

		timing () {

			related_pin	   : "A";
			timing_sense	   : negative_unate;

			cell_fall(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			cell_rise(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			fall_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			rise_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
		}

		internal_power () {

			related_pin	         : "A";
			fall_power(Power_data_X1) {
				values ("0.000140,0.000144,0.000147,0.000150,0.000152,0.000154,0.000154", \
				        "0.000143,0.000145,0.000147,0.000150,0.000152,0.000153,0.000154", \
				        "0.000177,0.000170,0.000164,0.000160,0.000158,0.000157,0.000156", \
				        "0.000302,0.000272,0.000239,0.000211,0.000190,0.000176,0.000167", \
				        "0.000646,0.000578,0.000485,0.000389,0.000311,0.000253,0.000214", \
				        "0.001449,0.001334,0.001160,0.000931,0.000697,0.000512,0.000380", \
				        "0.003111,0.002969,0.002744,0.002347,0.001834,0.001319,0.000917");
			}
			rise_power(Power_data_X1) {
				values ("0.000717,0.000723,0.000731,0.000743,0.000757,0.000778,0.000814", \
				        "0.000733,0.000732,0.000734,0.000741,0.000753,0.000773,0.000818", \
				        "0.000789,0.000780,0.000770,0.000763,0.000764,0.000777,0.000810", \
				        "0.000929,0.000909,0.000881,0.000851,0.000824,0.000811,0.000830", \
				        "0.001262,0.001218,0.001159,0.001089,0.001016,0.000947,0.000909", \
				        "0.002025,0.001939,0.001817,0.001670,0.001507,0.001346,0.001193", \
				        "0.003678,0.003538,0.003334,0.003033,0.002696,0.002346,0.002006");
			}
		}
	}

}

cell (or) {

	area               	: 2.0;

	cell_leakage_power 	: 6758.724750;

	leakage_power () {
		when      	: "!A1 & !A2";
		value      	: 7698.159000;
	}
	leakage_power () {
		when      	: "!A1 & A2";
		value      	: 5388.692000;
	}
	leakage_power () {
		when      	: "A1 & !A2";
		value      	: 6088.795000;
	}
	leakage_power () {
		when      	: "A1 & A2";
		value      	: 7859.253000;
	}

	pin (A1) {

		direction		: input;
		capacitance		: 0.0005;
		max_transition		: 0.600000;
	}

	pin (A2) {

		direction		: input;
		capacitance		: 0.0005;
		max_transition		: 0.600000;
	}

	pin (ZN) {

		direction		: output;
		max_capacitance		: 0.025600;
		max_transition		: 0.600000;
		function		: "(A1 | A2)";

		timing () {

			related_pin	   : "A1";
			timing_sense	   : positive_unate;

			cell_fall(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			cell_rise(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			fall_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			rise_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
		}

		timing () {

			related_pin	   : "A2";
			timing_sense	   : positive_unate;

			cell_fall(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			cell_rise(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			fall_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
			rise_transition(Timing_data_X1) {
				values ("1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0", \
				        "1.0,1.0,1.0,1.0,1.0,1.0,1.0");
			}
		}

		internal_power () {

			related_pin	         : "A1";
			fall_power(Power_data_X1) {
				values ("0.001952,0.001953,0.001956,0.001961,0.001963,0.001964,0.001963", \
				        "0.001959,0.001960,0.001963,0.001968,0.001971,0.001972,0.001972", \
				        "0.002011,0.002010,0.002011,0.002016,0.002018,0.002019,0.002019", \
				        "0.002160,0.002153,0.002148,0.002148,0.002147,0.002147,0.002147", \
				        "0.002501,0.002486,0.002472,0.002461,0.002456,0.002452,0.002450", \
				        "0.003276,0.003242,0.003213,0.003190,0.003172,0.003162,0.003155", \
				        "0.005014,0.004959,0.004909,0.004851,0.004809,0.004780,0.004763");
			}
			rise_power(Power_data_X1) {
				values ("0.000822,0.000828,0.000836,0.000848,0.000862,0.000882,0.000924", \
				        "0.000823,0.000827,0.000834,0.000844,0.000860,0.000881,0.000917", \
				        "0.000856,0.000857,0.000860,0.000869,0.000883,0.000904,0.000942", \
				        "0.000984,0.000981,0.000978,0.000981,0.000990,0.001009,0.001045", \
				        "0.001349,0.001338,0.001327,0.001320,0.001320,0.001334,0.001365", \
				        "0.002228,0.002200,0.002167,0.002142,0.002126,0.002122,0.002148", \
				        "0.004017,0.003979,0.003955,0.003929,0.003882,0.003846,0.003839");
			}
		}

		internal_power () {

			related_pin	         : "A2";
			fall_power(Power_data_X1) {
				values ("0.002195,0.002196,0.002200,0.002205,0.002207,0.002207,0.002207", \
				        "0.002184,0.002185,0.002189,0.002194,0.002196,0.002197,0.002196", \
				        "0.002183,0.002184,0.002186,0.002191,0.002194,0.002194,0.002195", \
				        "0.002216,0.002213,0.002212,0.002215,0.002216,0.002216,0.002216", \
				        "0.002390,0.002382,0.002372,0.002367,0.002365,0.002364,0.002363", \
				        "0.002957,0.002937,0.002917,0.002900,0.002889,0.002883,0.002879", \
				        "0.004380,0.004337,0.004293,0.004262,0.004235,0.004217,0.004207");
			}
			rise_power(Power_data_X1) {
				values ("0.001265,0.001270,0.001278,0.001290,0.001308,0.001331,0.001370", \
				        "0.001259,0.001263,0.001269,0.001280,0.001298,0.001322,0.001362", \
				        "0.001285,0.001286,0.001289,0.001297,0.001313,0.001338,0.001380", \
				        "0.001390,0.001387,0.001385,0.001387,0.001397,0.001419,0.001461", \
				        "0.001695,0.001686,0.001676,0.001669,0.001670,0.001685,0.001721", \
				        "0.002451,0.002420,0.002396,0.002374,0.002359,0.002358,0.002387", \
				        "0.004018,0.003993,0.003954,0.003941,0.003899,0.003871,0.003873");
			}
		}
	}

}

}
/*
* End of file
*/
